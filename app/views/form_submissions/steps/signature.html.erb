<%= render layout: 'form_submissions/form', locals: { step_title: 'Signature' } do |form| %>
  <div class="space-y-4">
    <p class="text-sm text-muted-foreground">Please review all information provided and sign below to confirm its accuracy.</p>
    
    <%= render_card title: "Signature", class: "mb-4" do %>
      <% if @requirements && @requirements.respond_to?(:signature_mode) && @requirements.signature_mode == 'electronic' %>
        <div class="space-y-2">
          <%= render_label name: :signature, label: 'Draw your signature below' %>
          <div class="border rounded-md p-3 mb-2" style="height: 150px;">
            <canvas id="signature-pad" width="100%" height="100%"></canvas>
          </div>
          <%= form.hidden_field :signature,
                              id: 'signature-data',
                              value: @form_submission.step_values(@step_id)['signature'],
                              data: { form_target: 'field' } %>
          <%= render_button 'Clear', variant: :outline, id: 'clear-signature', as: :button, class: 'text-xs' %>
        </div>
        
        <script>
          document.addEventListener('DOMContentLoaded', function() {
            const canvas = document.getElementById('signature-pad');
            const signatureData = document.getElementById('signature-data');
            const clearButton = document.getElementById('clear-signature');
            const ctx = canvas.getContext('2d');
            
            // Set canvas dimensions
            canvas.width = canvas.offsetWidth;
            canvas.height = canvas.offsetHeight;
            
            let isDrawing = false;
            
            // Load existing signature if available
            if (signatureData.value) {
              const img = new Image();
              img.onload = function() {
                ctx.drawImage(img, 0, 0);
              };
              img.src = signatureData.value;
            }
            
            // Drawing event handlers
            canvas.addEventListener('mousedown', startDrawing);
            canvas.addEventListener('mousemove', draw);
            canvas.addEventListener('mouseup', stopDrawing);
            canvas.addEventListener('mouseout', stopDrawing);
            
            // Touch support
            canvas.addEventListener('touchstart', startDrawing);
            canvas.addEventListener('touchmove', draw);
            canvas.addEventListener('touchend', stopDrawing);
            
            clearButton.addEventListener('click', clearSignature);
            
            function startDrawing(e) {
              isDrawing = true;
              draw(e);
            }
            
            function draw(e) {
              if (!isDrawing) return;
              
              e.preventDefault();
              
              const rect = canvas.getBoundingClientRect();
              const x = (e.clientX || e.touches[0].clientX) - rect.left;
              const y = (e.clientY || e.touches[0].clientY) - rect.top;
              
              ctx.lineWidth = 2;
              ctx.lineCap = 'round';
              ctx.strokeStyle = '#000';
              
              ctx.lineTo(x, y);
              ctx.stroke();
              ctx.beginPath();
              ctx.moveTo(x, y);
              
              // Save signature data
              signatureData.value = canvas.toDataURL();
            }
            
            function stopDrawing() {
              isDrawing = false;
              ctx.beginPath();
            }
            
            function clearSignature() {
              ctx.clearRect(0, 0, canvas.width, canvas.height);
              signatureData.value = '';
            }
          });
        </script>
      <% else %>
        <!-- Default to standard signature mode -->
        <div class="space-y-2">
          <%= render_label name: :signature, label: 'Type your full legal name as your signature' %>
          <%= render_input name: :signature,
                          value: @form_submission.step_values(@step_id)['signature'],
                          required: true,
                          data: { form_target: 'field' } %>
        </div>
      <% end %>
      
      <div class="flex items-start space-x-2 mt-4">
        <%= form.check_box :confirmation,
                          class: 'h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary',
                          required: true,
                          checked: @form_submission.step_values(@step_id)['confirmation'],
                          data: { form_target: 'field' } %>
        <%= form.label :confirmation, 'I confirm that all information provided is accurate and complete to the best of my knowledge.', class: 'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70' %>
      </div>
    <% end %>
  </div>
  
  <div data-form-target="navigation" class="flex justify-between mt-6">
    <!-- Navigation buttons will be dynamically rendered here by the FormController -->
  </div>
  
  <div class="flex justify-end mt-6">
    <%= render_button 'Submit', as: :submit, name: 'commit', value: 'Submit' %>
  </div>
<% end %>